name: CICD
on:
  push:
    branches:
      - main
  pull_request: {}
jobs:
  validate-dist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - run: npm install
      - run: npm run format
      - run: |
          git diff --exit-code || {
            echo "Code formatting issues found. Please run 'npm run format' and commit the changes."
            exit 1
          }
      - run: npm run build
      - run: |
          git diff --exit-code dist || {
            echo "Build output has changed. Please run 'npm run build' and commit the changes."
            exit 1
          }
  test:
    needs: validate-dist
    runs-on: ${{ matrix.runner }}
    env:
      GITHUB_TOKEN: ${{ github.token }}
    strategy:
      fail-fast: false
      matrix:
        runner: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        id: get-job-uuid
      - if: (!steps.get-job-uuid.outputs.uuid)
        run: |
          echo "::error::Job UUID not found. This is probably a bug"
          exit 1
      - name: Get check suite id
        id: get-check-suite-id
        shell: bash
        run: echo "check_suite_id=$(gh api "repos/{owner}/{repo}/actions/runs/${GITHUB_RUN_ID}" --jq .check_suite_id)" >> "$GITHUB_OUTPUT"
      - name: Find job id
        id: find-check-run
        env:
          uuid: ${{ steps.get-job-uuid.outputs.uuid }}
          check_suite_id: ${{ steps.get-check-suite-id.outputs.check_suite_id }}
        shell: bash
        run: |
          check_run_id=$(gh api "repos/{owner}/{repo}/check-suites/${check_suite_id}/check-runs" --jq ".check_runs[] | select(.external_id == env.uuid) | .id")
          echo "::notice::Job ID: ${check_run_id}"
          echo "::notice::Job URL: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/job/${check_run_id}"
